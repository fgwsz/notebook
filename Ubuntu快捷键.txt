#=============================================================================
#系统快捷键部分
#=============================================================================
注意:Ubuntu系统的`super`键的位置和为Windows系统中的`windows`键一致
`ctrl alt t` 打开终端
`super up` 最大化窗口
`super Fn` 切换窗口
    进入待选界面
    使用方向键移动待选窗口框
    使用`enter`跳转到待选窗口框里的窗口
`alt tab` 切换窗口
    按住`alt`进入待选界面
    使用方向键移动待选窗口框
    松开`alt`跳转到待选窗口框里的窗口
`alt F4` 关闭窗口
`super d` 显示桌面/恢复原先的显示窗口
`super l` 锁屏
`super ↑` 窗口最大化
`super ↓` 窗口居中显示
`super ←` 窗口左半屏显示
`super →` 窗口右半屏显示
#=============================================================================
#命令行部分
#=============================================================================

touch [file path]
    新建一个路径为[file path]的文本文件

mkdir [dir path]
    新建一个路径为[dir path]的文件夹

rm -rf [path]
    强制删除路径[path]的文件/文件夹

cd [dir path]
    切换工作目录到[dir path]
    一些特殊的相对目录表示方法:
        .. 上一级目录
        .  当前目录
        ~  用户根目录

cp [-r] [from path] [to path]
    拷贝[from path]文件/文件夹到[to path]
    -r 可选项,在拷贝文件夹的时候需添加该可选项

mv [from path] [to path]
    剪切[from path]文件/文件夹到[to path]

ls -f [dir path]
    [dir path]为空,默认为.(当前工作目录)
    显示路径为[dir path]目录下的下一级文件/文件夹信息

ls -ld [path]
    检查路径[path]的文件/目录是否存在

tree -f [dir path]
    安装:
    ```shell
    sudo apt install tree
    ```
    [dir path]为空,默认为.(当前工作目录)
    以树形式结构显示路径为[dir path]目录下的全部文件/文件夹信息

clear
    清空终端

grep [string/regex pattern] [path expr]
    在[path expr]匹配的目录查找[string/regex pattern]的全部匹配项

reboot
    重启计算机

shutdown -h now
    关闭计算机

chmod +x [file path]
    赋予路径为[file path]的可执行文件可执行权限,即设置文件为可执行的文件
    含义:
        chmod(change mode)
        +(add)x(execute)

chmod -w [file path]
    取消路径为[file path]的文本文件的写入权限,即设置文件为不可修改的文件
    含义:
        chmod(change mode)
        -(delete)w(write)

dpkg -l [package name]
    查找[package name]的包是否安装
    如果[package name]为空则显示全部的包信息
    小技巧:
    dpkg -l|grep [string/regex pattern]
    查看[string/regex pattern]匹配的包信息

dpkg -i [deb package path]
    安装本地的路径为[deb package path]的deb包

apt search [package name]
    搜索远程仓库中和[package name]有关的包信息
    小技巧:
    apt search [package name]|grep installed
    查看[package name]是否已经安装

apt list --upgradable
    查看本地哪些包可以从远程仓库获取更新

sudo [command]
    使用管理员权限来执行[command]指令

su [user name]
    切换到名为[user name]的用户
    如果[user name]为空,切换到root账号

apt install [package name]
    使用apt安装名为[package name]的包

apt remove [package name]
    使用apt卸载名为[package name]的包

apt update
    更新apt远程仓库

apt upgrade
    更新所有可以更新的本地包到apt远程仓库的最新版本

xdg-open [path]
    使用系统默认的文件浏览器打开路径为[path]的文件夹/文件

history | grep [command info]
    查找包含[command info]的历史命令
    使用管道符`|`传递前一个命令的结果作为下一个命令的输入
    history
        查看shell命令历史输入信息
    grep [string/regex pattern] [path/string include match mode]
        查找显示目录/字符信息中的正则表达式匹配结果

apt-get purge [string/regex pattern]
    卸载[string/regex pattern]名称匹配的包并且删除相关配置

apt-get clean
    删除安装了的软件包的安装包(如果你确定这些安装包不会再用)删除包缓存中的所有包

apt-get autoremove
    删除为了满足其他软件包的依赖而安装的,系统会自动卸载这些不再需要的软件包

top
    查看进程信息(实时显示)
    进程信息的第一列就是进程编号PID

ps aux
    查看进程信息(一次性显示当前)
    显示格式如下:
    $ ps aux
    USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
    小技巧:
        ps aux|grep [string/regex pattern]
            查找符合[string/regex pattern]的进程信息
    例子:
    $ ps aux|grep vim
    fgwsz       2344  0.4  0.1 909444 55864 ?        Ssl  May29   0:12 gvim .
    fgwsz       8858  2.2  0.1 1006572 54024 ?       Rsl  00:10   0:03 gvim ./Ubuntu快捷键.txt
    fgwsz       8939  0.0  0.0   8444  6016 pts/2    S+   00:13   0:00 rg vim

kill -9 [PID]
    杀死编号为[PID]的进程

echo [string]>[file path]
    覆盖路径为[file path]的文本文件内容为[string]
    若[file path]不存在,则创建一个路径为[file path]的文本文件

echo [string]>>[file path]
    在路径为[file path]的文本文件内容的尾部插入一行字符串[string]
    若[file path]不存在,则创建一个路径为[file path]的文本文件

cat [file path]
    查看(在终端显示)路径为[file path]的文本文件的具体内容

neofetch
    安装`sudo apt install neofetch`
    查看计算机信息

lsb_release -a
    查看操作系统版本信息

gnome-control-center
    打开设置

gnome-terminal
    打开终端

snap-store
    打开snap商店

spark-store
    打开spark商店

gnome-session-properties
    打开开机应用设置界面

head -n [line-number] [file-path/string]
    控制台打印显示[file-path/string]的前[line-number]行内容

man [command]
    进入man显示界面,显示[command]的帮助信息
    `j`             向下滑动一小段距离
    `k`             向上滑动一小段距离
    `space`         向下滑动一大段距离
    `shift space`   向上滑动一大段距离
    `f`             向后翻一页
    `b`             向前翻一页
    `h`             进入帮助界面,显示帮助信息(包含man命令更详细的快捷键说明)
        `q`         退出帮助界面
    `q`             退出man显示界面
    `g`             跳转到首行
    `G`             跳转到尾行
    `/`             向后搜索
    `?`             向前搜索
    `n`             跳转到下一个搜索结果
    `N`             跳转到前一个搜索结果
    `Esc u`         关闭搜索结果的高亮显示:Undo (toggle) search highlighting
    `Esc U`         关闭搜索结果的高亮显示:Clear search highlighting

tar -czvf [.tar.gz file path] [input path]...
    压缩文件为.tar.gz
    -c 创建归档文件
    -z 使用gzip压缩
    -v 显示处理过程
    -f 指定文件路径
    [.tar.gz path]==>[root path/filename].tar.gz
    注意:[root path]必须是已存在的目录
    [input path]指的是要被压缩的文件路径,可以是单个文件,也可以是文件夹
    [input path]...表示可以有多个

tar -xzvf [.tar.gz file path] -C [output path]
    -x 提取归档文件
    -z 使用gzip解压
    -v 显示处理过程
    -f 指定文件路径
    解压文件路径为[.tar.gz file path]中的内容到[output path]目录下
    注意:[output path]必须是一个已存在的目录路径

zip -r [zip path] [input path]...
    压缩文件为.zip
    [zip path]==>[zip root path/zip name].zip
    注意:[zip path]的根目录必须是已存在的目录
    [input path]指的是要被压缩的文件路径,可以是单个文件,也可以是文件夹
    [input path]...表示可以有多个

unzip [zip file path] -d [output path]
    解压.zip文件到[output path]
    其中[output path]可以是未存在的目录

7z a [-mx=9] [7z path] [input path]...
    压缩文件为.7z
    [-mx=9]表示压缩等级,是可选项
        -mx=0 不压缩
        -mx=1 快速压缩
        -mx=5 正常压缩
        -mx=7 最大压缩
        -mx=9 极限压缩
        压缩等级选取越大,代表压缩之后的7z文件体积越小
    [7z path]==>[7z root path/7z name].7z
    注意:[7z path]的根目录必须是已存在的目录
    [input path]指的是要被压缩的文件路径,可以是单个文件,也可以是文件夹
    [input path]...表示可以有多个,每一个之间用空格隔开

7z x [7z path] -o[output path]
    解压.7z文件到[output path]
    其中[output path]可以是未存在的目录

uname -a
    显示当前系统信息包含操作系统版本以及硬件架构

grep 'cpu MHz' /proc/cpuinfo
    显示cpu当前的运行频率

watch grep \'cpu MHz\' /proc/cpuinfo
    实时显示cpu当前的运行频率

cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
    查看cpu当前工作模式

cpufreq-info
    安装`sudo apt-get install cpufrequtils`
    显示cpu信息,包含cpu编号,当前的运行频率等

vlc
    安装(使用snap-store搜索vlc安装即可)
    打开VLC媒体播放器

fc-list
    查看系统已安装的全部字体

fc-list | grep [regex]
    [regex]指的是正则表达式
    查找符合[regex]的已安装字体

gnome-paint
    安装`sudo apt install gnome-paint`
    打开画板

[command] &
通过在命令后添加`&`符号,将命令[command]放在后台运行,
不会避免阻塞当前的指令执行进程.
如果`[command] &`放到脚本中,
无论执行结果如何,都会继续执行后续的bash指令.
而且`[command] &`可以让[command]在自己的子进程中运行
而不会作为bash解释器的子进程.

date
    显示系统时间

ldd --version
    查看glibc的版本信息

wc [OPTION]
  -c, --bytes            print the byte counts
  -m, --chars            print the character counts
  -l, --lines            print the newline counts
      --files0-from=F    read input from the files specified by
                           NUL-terminated names in file F;
                           If F is - then read names from standard input
  -L, --max-line-length  print the maximum display width
  -w, --words            print the word counts
      --help     display this help and exit
      --version  output version information and exit
    统计输出流(文件/命令执行结果)中的字符/行/字数的数量信息
    举例:
        wc -l xxx.txt # 打印xxx.txt中的行数
        [command] | wc -w # 打印[command]命令输出结果的字数

cloc [path]
    安装`sudo apt install cloc`
    统计路径[path]中的代码行数

nslookup
    进入>指令界面
    [url]   查看网址[url]解析成的IP地址信息
    exit    退出
    使用案例:
    ```txt
    $ nslookup
    > bing.com
    Server:         8.8.8.8
    Address:        8.8.8.8#53

    Non-authoritative answer:
    Name:   bing.com
    Address: 204.79.197.200
    Name:   bing.com
    Address: 13.107.21.200
    Name:   bing.com
    Address: 2620:1ec:c11::200
    > exit
    $ 
    ```

nslookup [url]
    查看网址[url]解析成的IP地址信息
    使用案例:
    ```txt
    $ nslookup bing.com
    Server:         8.8.8.8
    Address:        8.8.8.8#53

    Non-authoritative answer:
    Name:   bing.com
    Address: 204.79.197.200
    Name:   bing.com
    Address: 13.107.21.200
    Name:   bing.com
    Address: 2620:1ec:c11::200

    $ 
    ```

ping [url]
    尝试连接网址[url]

curl [url]
    安装`sudo apt install curl`
    功能一:下载[url]指定的文件到本地
        `-o [path]`                 指定下载路径(支持绝对路径和相对路径)
        `-C -`                      使用断点续传功能
        `--retry [number]`          自定义断点续传重试的次数
            只写`--retry`不写[number],代表无限次数
        `--retry-delay [seconds]`   自定义每次断点续传重试之前延时的秒数
        `-L`                        支持重定向的链接
        `--http1.1`                 使用http1.1进行下载,默认使用http2.0
        指令的返回值
            成功时返回0
            失败时返回错误码
    功能二:获取[url]指定的文件的大小
    ```bash
    #文件的网址
    url="www.xxx.com/yyy.txt"
    #获取文件大小
    remote_size=$(curl -sI "$url" | grep -i Content-Length | awk '{print $2}' | tr -d '\r')
    remote_size=${remote_size% } #去除尾部的空白字符
    #判断文件是否存在
    if [ -z "$remote_size" ]; then #-z 表示判断是否为空字符串
        echo "Unable to retrieve the size of the remote file."
    fi
    ```

wget [url]
    主要用来下载小型文件(自动支持断点续传)
    安装`sudo apt install wget`
    下载[url]指定的文件到本地的当前文件夹下
    `-O [filename]` 重命名下载文件的名称
    `-t [number]`   自定义断点续传重试的次数,默认是20
        `-t 0`/`-t inf`都代表无限次数
    指令的返回值
        成功时返回0
        失败时返回错误码

axel [url]
    主要用来下载大型文件(自动支持断点续传)
    安装`sudo apt install axel`
    下载(多线程断点续传分块下载)[url]指定的文件到本地
    `-o [path]`                 指定下载路径(支持绝对路径和相对路径)
    `-n [number]`               文件分成[number]块(线程数)进行下载
        默认情况下(不写`-n`时),使用4线程下载
    指令的返回值
        成功时返回0
        失败时返回错误码

aria2c [磁力链接]
    用来下载磁力链接
    安装`sudo apt install aria2`
    `-d [path]`     下载文件的存储目录
    `-o [filename]` 下载文件的名称
        它总是相对于在-d选项中给出的目录
        当使用-Z选项时,此选项将被忽略
    aria2c的配置文件路径在`~/.config/aria2/`文件路径下,
    如果没有这个文件夹的话可以自行创建,并创建如下路径:
    ~/.config/aria2
        ├── aria2.conf
        ├── aria2.log
        └── aria2.session
    `aria2.conf`是配置文件,
    `aria2.log`是日志文件,
    `aria2.session`是下载器进度保存文件,
    `aria2`启动的过程中会从这个文件夹读取下载参数和配置.
    注意:
        在`aria2.conf`这个配置文件中无法将`~`这个用户目录文件夹的通配符,
        识别成正确的用户目录文件全路径,
        请自行更改为实际的用户目录文件全路径
    下面给出一个`aria2.conf`配置文件的实例作为参考:
    ```txt
    # /home/fgwsz/.config/aria2/aria2.conf
    # 日志文件路径
    log=/home/fgwsz/.config/aria2/aria2.log
    # 下载目录
    dir=/home/fgwsz/Downloads
    # 输入文件路径(记录下载历史)
    input-file=/home/fgwsz/.config/aria2/aria2.session
    # 输出文件路径(保存下载历史)
    save-session=/home/fgwsz/.config/aria2/aria2.session
    # 启用 DHT (IPv4)
    enable-dht=true
    # DHT 文件路径
    dht-file-path=/home/fgwsz/.config/aria2/dht.dat
    # DHT 监听端口范围
    listen-port=6881-6999
    dht-listen-port=6881-6999
    # 启用本地节点发现 (LPD)
    bt-enable-lpd=true
    # 启用节点交换扩展
    enable-peer-exchange=true
    # 断点续传
    continue=true
    # 文件预分配方式
    file-allocation=falloc
    # 最大并发下载任务数
    max-concurrent-downloads=5
    # 同一服务器最大连接数
    max-connection-per-server=10
    # 整体下载速度限制(单位:字节/s),0 表示无限制
    max-overall-download-limit=0
    # 单个任务下载速度限制(单位:字节/s),0 表示无限制
    max-download-limit=0
    # 整体上传速度限制(单位:字节/s),0 表示无限制
    max-overall-upload-limit=0
    # 单个任务上传速度限制(单位:字节/s),0 表示无限制
    max-upload-limit=0
    ```
    其中`/home/fgwsz`是我的用户目录的全路径

ibus-daemon -r -d -x
    重启ibus,主要用于ibus输入法悬浮框无法弹出时(异常退出),重启输入法

dwebp [webp image path] -o [output image path]
    安装`sudo apt-get install webp`
    将文件路径为[webp image path]的webp格式的图像文件
        转换为文件路径为[output image path]的其他格式的图像文件

cwebp [input image path] -o [webp image path]
    安装`sudo apt-get install webp`
    将文件路径为[input image path]的其他格式的图像文件
        转换为文件路径为[webp image path]的webp格式的图像文件

lsblk
    用于查看硬件设备的盘符和存储空间的信息
    一个奇怪的用处:
        用来查看U盘的盘符是多少,在插入U盘之前使用该命令来查看,
        插入U盘之后再次使用该命令即可得知U盘的盘符,一般都是sdb[number]
        硬件设备的完整盘符一般都是盘符前面加上/dev/前缀,
        因此U盘的完整盘符一般是/dev/sdb[number]格式

sudo ddrescue -d -r3 [硬件设备的完整盘符] 硬件镜像.img 恢复日志.log
    此命令需要安装`gddrescue`
    安装`sudo apt-get install gddrescue`
    此命令用于修复无法读取的硬件设备数据,导出完整恢复的数据到系统中
    此命令执行完之后会生成一个硬件镜像.img,里面存放了恢复出来的完整的设备数据
    还会生成一个恢复日志.log,里面记录了恢复过程中的信息,
    检查log文件是否存在`Finished`关键字可以确定该命令是否正常执行完成
    `-d`
        启用Direct disk access(直接磁盘访问模式)
        技术原理:绕过操作系统缓存,直接从物理设备读取数据
        优势:避免因缓存错误导致的数据误判
        风险:可能加速物理损坏设备的故障恶化
    `-r[number]`
        设置重试策略为[number]次逆向扫描
    当此命令运行意外中断的时候可以使用一下命令来继续执行:
        sudo ddrescue -R -r3 [硬件设备完整盘符] 硬件镜像.img 恢复日志.log
        `-R`
            表示从上次中断点继续

foremost -i [input img file path] -o [output path]
    提取路径为[input img file path]的镜像文件中的数据到本地[output path]中
    安装`sudo apt install foremost`

testdisk [硬件设备的完整盘符]
    安装`sudo apt install testdisk`
    读取/分析/修复[硬件设备的完整盘符]对应的硬件存储信息

gimp
    gimp是一个图片编辑软件,定位类似于linux上的PhotoShop
    安装`sudo apt install gimp`

sudo lshw -C display
    查看显示器的品牌和型号

sudo dmidecode -s system-manufacturer
    查看主机品牌(制造商)

sudo dmidecode -s system-product-name
    查看主机型号(产品名称)

sudo dmidecode -s system-serial-number
    查看序列号

pdftk [[input pdf file] list] [[operator] [arguemnts] list] output [output pdf file path]
    pdf操作工具
    安装`sudo apt install pdftk-java`
    output 指定输出文件路径
    使用案例:
        扫描页交替排序
                pdftk A=even.pdf B=odd.pdf shuffle A B output collated.pdf
            若odd.pdf页面顺序颠倒:
                pdftk A=even.pdf B=odd.pdf shuffle A Bend-1 output collated.pdf
        PDF解密
            pdftk secured.pdf input_pw foopass output unsecured.pdf
        PDF加密
            128位强度加密(默认),禁止所有权限(默认):
                pdftk 1.pdf output 1.128.pdf owner_pw foopass
            添加用户密码'baz'用于打开文件:
                pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz
            允许打印(需先输入密码):
                pdftk 1.pdf output 1.128.pdf owner_pw foo user_pw baz allow printing
        合并PDF文件
            基础合并:
                pdftk in1.pdf in2.pdf cat output out1.pdf
            使用句柄合并:
                pdftk A=in1.pdf B=in2.pdf cat A B output out1.pdf
            通配符批量合并:
                pdftk *.pdf cat output combined.pdf
        删除指定页面
                pdftk in.pdf cat 1-12 14-end output out1.pdf
            替代写法:
                pdftk A=in1.pdf cat A1-12 A14-end output out1.pdf
        40位加密操作
            pdftk 1.pdf 2.pdf cat output 3.pdf encrypt_40bit owner_pw foopass
        合并含密码保护的文件
            pdftk A=secured.pdf 2.pdf input_pw A=foopass cat output 3.pdf
        压缩PDF
            pdftk doc.pdf output doc.c.pdf compress
        解压PDF
            pdftk doc.c.pdf output doc.pdf uncompress
        修复损坏的PDF
            pdftk broken.pdf output fixed.pdf
        拆分PDF为单页文件
            基础拆分:
              pdftk in.pdf burst
            加密拆分并允许低质量打印:
              pdftk in.pdf burst owner_pw foopass allow DegradedPrinting
        生成元数据报告
            pdftk in.pdf dump_data output report.txt
        页面旋转参数说明
            奇偶页限定符:`even`(偶)或`odd`(奇)
            旋转关键词与角度对应:
                `north`(0度),`east`(90度),`south`(180度),`west`(270度),
                `left`(逆时针90度),`right`(顺时针90度),`down`(180度翻转)
            首页顺时针旋转90度,其余页面选取奇数页面旋转270度:
                pdftk in.pdf cat 1east 2-endoddwest output out.pdf
            全文旋转180度:
                pdftk in.pdf cat 1-endsouth output out.pdf
        使用注意事项
            文件名含空格时需用引号包裹(如`"file name.pdf"`)

shotcut
    启动shotcut
    shotcut是一款开源的视频剪辑软件
    安装`sudo apt install shotcut`

#=============================================================================
#应用快捷键部分
#=============================================================================
linux xdg(类似于windows的explorer.exe)
    `ctrl f`    进入搜索框
    `alt ↑`     上一级目录
    `alt ←`     前一个目录
    `alt →`     后一个目录
    `space`     点击/选中/取消选中当前待选框中的元素
    `tab`       将待选框移动到下一个元素
    `shift tab` 将待选框移动到上一个元素
    `↑/↓/←/→` 按方向来移动待选框
    `[按住]shift [按多次]↑/↓/←/→` 选中多个文件/目录
        松开shift,按↑/↓/←/→进行移动就可以取消多选
    `enter` 打开待选框中的文件/目录
        目录:进入该目录
        文件:用默认应用程序打开文件
            可执行程序:运行可执行程序
    `ctrl c` 复制
    `ctrl v` 粘贴
    `ctrl x` 剪切
    `ctrl i` 打开文件右键属性菜单界面
    `delete` 删除
    `ctrl a` 全选
    `ctrl z` 撤销
    `ctrl Z` 取消撤销
    `F2` 重命名
    `ctrl l` 进入地址编辑栏
    `ctrl n` 打开一个新的和当前文件路径一致的文件浏览器窗口

linux microsoft-edge
    `ctrl n`         打开一个新的edge窗口,并显示`new tab`页
    `ctrl d`         收藏当前标签页
    `ctrl w`         关闭当前标签页
    `ctrl tab`       切换到下一个标签页
    `ctrl shift tab` 切换到上一个标签页
    `ctrl j`         打开下载标签栏小窗口,之后可以使用`tab`键来选择选项按钮,`enter`来点击按钮,`esc`键退出小窗口
    `ctrl p`         打印当前网页
    `alt d`          进入标签页地址栏
    `alt ←`          后退
    `alt →`          前进
    `alt p`          固定/取消固定标签页
    `space`          网页视图显示范围的下一页
    `shift space`    网页视图显示范围的上一页
    `↑`              网页视图显示范围上移一段距离(不平滑移动)
    `↓`              网页视图显示范围下移一段距离(不平滑移动)
    `←`              网页视图显示范围左移一段距离(不平滑移动)
    `→`              网页视图显示范围右移一段距离(不平滑移动)

linux Document Viewer
    `j`/`↓`         向下滑动一小段距离
    `k`/`↑`         向上滑动一小段距离
    `h`/`←`         向前翻一页
    `l`/`→`         向后翻一页
    `shift space`   向前翻一页
    `space`         向后翻一页
    `ctrl f`        搜索当前文档的注释
    `ctrl p`        打印当前文档
